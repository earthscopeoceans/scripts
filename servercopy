#!/bin/tcsh
#
# Makes a copy of the MERMAID server for down-the-line processing
#
# Last input from aetimmes-at-princeton.edu, 10/08/2018
# Last modified by fjsimons-at-alum.mit.edu, 03/02/2020

# Where was I, so I can return to it
set returnto = `pwd`

# Where will all the data be copied to?
set whereto =  /u/fjsimons/MERMAID/server
set wherest =  /u/fjsimons/MERMAID/sustech

# Where will, additionally, all the *.vit files be copied to?
set wherevit = /u/fjsimons/MERMAID/serverdata/vitdata
# And where will the *.tbl files go?
set wheretbl = /u/fjsimons/MERMAID/serverdata/tbldata

# Do not mess with SCP as you will need to supply passwords.
# The better solution for setting up a CRON job via passwordless
# single-command-use SSH keys. Of course the public keys need to be
# present on the respective servers, and the appropriate range for
# which they are designed needs to be identified using RRSYNC. 

# From Princeton at Princeton, we get it all
echo "RSYNCING PRINCETON MERMAIDS"
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av mermaid@mermaid.princeton.edu:\*.\* $whereto

# From GeoAzur at Nice, we just get the relevant data 
echo "RSYNCING NICE MERMAIDS"
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av eso@mermaid.unice.fr:\*.MER $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av eso@mermaid.unice.fr:\*.LOG $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av eso@mermaid.unice.fr:\*.vit $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av eso@mermaid.unice.fr:\*.cmd $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av eso@mermaid.unice.fr:\*.out $whereto

# From KobeUni at GeoAzur at Nice, we just get the relevant data
echo "RSYNCING KOBE MERMAIDS"
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av kobeuni@mermaid.unice.fr:\*.MER $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av kobeuni@mermaid.unice.fr:\*.LOG $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av kobeuni@mermaid.unice.fr:\*.vit $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av kobeuni@mermaid.unice.fr:\*.cmd $whereto
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av kobeuni@mermaid.unice.fr:\*.out $whereto

# From SUSTECH at Shenzhen, we just get the relevant data - store them separately
echo "RSYNCING SUSTECH MERMAIDS"
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av mermaid@134.175.126.179:\*.MER $wherest
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av mermaid@134.175.126.179:\*.LOG $wherest
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av mermaid@134.175.126.179:\*.vit $wherest
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av mermaid@134.175.126.179:\*.cmd $wherest
rsync -e "ssh -i /u/fjsimons/.ssh/id_remote_backup" -av mermaid@134.175.126.179:\*.out $wherest

# Then, go into the copied directory and use GIT to ink it in
cd $whereto
git add .
git commit -m "A whole fresh copy made"

# Then, copy the *vit files separately for extra care
/bin/cp -u $whereto/*.vit $wherevit

# Make a local backup of that *vit file repository also
cd $wherevit
git add .
git commit -m "A whole fresh copy made"

# And then these *.vit files need to be converted to *.tbl files via a MATLAB precompiled code
set vitfiles = `ls *.vit`
foreach file ($vitfiles[*])
    echo Processing $wherevit/$file
   /u/fjsimons/PROGRAMS/MFILES/mermaid/vit2tbl $wherevit/$file $wheretbl/$file:r.tbl
end

# And these *.tbl files then need to be pushed/synced onto GEOWEB using this script
/u/fjsimons/PROGRAMS/UFILES/vitexport

# Return to where I was
cd $returnto

# After pulling (in a tar file with) vit files, inside vitdata
# set wherevit = /u/fjsimons/MERMAID/serverdata/vitdata
# set wheretbl = /u/fjsimons/MERMAID/serverdata/tbldata
# set sustec = (452.020-P-0026.vit 452.020-P-0027.vit 452.020-P-0028.vit 452.020-P-0029.vit 452.020-P-0030.vit 452.020-P-0031.vit 452.020-P-0032.vit 452.020-P-0033.vit 452.020-P-0034.vit 452.020-P-0035.vit 452.020-P-0036.vit 452.020-P-0037.vit 452.020-P-0038.vit 452.020-P-0039.vit 452.020-P-0040.vit 452.020-P-0041.vit 452.020-P-0042.vit 452.020-P-0043.vit 452.020-P-0044.vit 452.020-P-0045.vit 452.020-P-0046.vit 452.020-P-0047.vit 452.020-P-0048.vit 452.020-P-0049.vit)
# foreach file ($sustec[*])
#     echo Processing $wherevit/$file
#    /u/fjsimons/PROGRAMS/MFILES/mermaid/vit2tbl $wherevit/$file $wheretbl/$file:r.tbl
# end
