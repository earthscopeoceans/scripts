#!/bin/tcsh
#
# Pushes tabled vital files, made by VIT2TBL.M, or indeed its
# runtime-compiled (MCC) version VIT2TBL, to the GEOWEB server
#
# Last input from aetimmes-at-princeton.edu, 10/08/2018
# Last modified by fjsimons-at-alum.mit.edu, 04/20/2020

# Where are these being kept?
set fromwhere = /u/fjsimons/MERMAID/serverdata/tbldata

# Where are these being sent to?
set tothere = /u/fjsimons/MERMAID/serverdata/locdata

# These ones are actually floating! Make an explicit list of the numbers,
# knowing that the name is 452.020-P-??.tbl for Princeton and GeoAzur and 
# the name for Kobe Uni is 452.112-N-??.tbl and the name for the
# floats owned by SUSTC is 452.020-P-????.tbl but in the conversion I
# use P??? for all since the running numbers do not yet overlap. 
# Note that units 14 and 15 and 30 were never deployed
# So... KOBE \ GEOAZUR \ PRINCETON \ SUSTECH \ KOBE
set floats = (01 02 03 04 05 \
              06 07 \
              08 09 10 11 12 13       16 17 18 19 20 21 22 23 24 25\
              26 27 28 29    31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\
              50 52 53 54)

# Remove the ALL file before making it again
/bin/rm -f $tothere/all.txt

# Do them in the loop - watch the treatment of leading zeroes which in
# VIT2TBL and in the tables themselves is different from how they get
# posted here with only three digits total, and always with a P in the front
foreach float ($floats[*])
     # Individual floats, last 2*30 lines only, use P for all of them
     tail -60    $fromwhere/452.???-?-*$float.tbl  >! $tothere/P0{$float}_030.txt
     # Individual floats, complete history, use P for all of them
     /bin/cp -f  $fromwhere/452.???-?-*$float.tbl     $tothere/P0${float}_all.txt
     # Collective files, only their last line
     tail -1     $fromwhere/452.???-?-*$float.tbl >>! $tothere/all.txt
     # Collective files, only their first line, need to do  this only once obviously...
     # head -1 -q  $fromwhere/452.???-?-*$float.tbl >>! $tothere/misalo.txt
end

# Then all of those get pushed on to the server via a passwordless
# single-command-use SSH key for back up to a directory that is
# specified via the remote public key by prepending the relevant
# information in the authorized_keys file (for us here it is
# /home/www/people/simons/SOM on geoweb.princeton.edu), so that the
# pushing can be done via CRON without passwords being prompted
# But watch, as in PTON2MARK, to not earlier set any ssh-add key preceding with overriding preference
set finaldest = /home/www/people/simons/SOM
rsync -ve "ssh -i /u/fjsimons/.ssh/id_remote_backup" $tothere/*_030.txt  fjsimons@geoweb.princeton.edu:$finaldest
rsync -ve "ssh -i /u/fjsimons/.ssh/id_remote_backup" $tothere/*_all.txt  fjsimons@geoweb.princeton.edu:$finaldest
rsync -ve "ssh -i /u/fjsimons/.ssh/id_remote_backup" $tothere/all.txt    fjsimons@geoweb.princeton.edu:$finaldest
rsync -ve "ssh -i /u/fjsimons/.ssh/id_remote_backup" $tothere/misalo.txt fjsimons@geoweb.princeton.edu:$finaldest
